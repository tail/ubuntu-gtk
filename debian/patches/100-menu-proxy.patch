=== modified file 'gtk/Makefile.am'
--- old/gtk/Makefile.am	2010-06-10 14:59:04 +0000
+++ new/gtk/Makefile.am	2010-06-10 14:59:33 +0000
@@ -253,6 +253,8 @@
 	gtkmenu.h		\
 	gtkmenubar.h		\
 	gtkmenuitem.h		\
+	gtkmenuproxy.h		\
+	gtkmenuproxymodule.h	\
 	gtkmenushell.h		\
 	gtkmenutoolbutton.h	\
 	gtkmessagedialog.h	\
@@ -519,6 +521,8 @@
 	gtkmenu.c		\
 	gtkmenubar.c		\
 	gtkmenuitem.c		\
+	gtkmenuproxy.c		\
+	gtkmenuproxymodule.c	\
 	gtkmenushell.c		\
 	gtkmenutoolbutton.c	\
 	gtkmessagedialog.c	\

=== modified file 'gtk/Makefile.in'
--- old/gtk/Makefile.in	2010-06-10 14:59:04 +0000
+++ new/gtk/Makefile.in	2010-06-10 14:59:44 +0000
@@ -151,16 +151,17 @@
 	gtkinfobar.c gtkinputdialog.c gtkinvisible.c gtkitem.c \
 	gtkkeyhash.c gtklabel.c gtklayout.c gtklinkbutton.c \
 	gtkliststore.c gtkmain.c gtkmarshal.c gtkmarshalers.c \
-	gtkmenu.c gtkmenubar.c gtkmenuitem.c gtkmenushell.c \
-	gtkmenutoolbutton.c gtkmessagedialog.c gtkmisc.c \
-	gtkmnemonichash.c gtkmodules.c gtkmountoperation.c \
-	gtknotebook.c gtkobject.c gtkoffscreenwindow.c gtkorientable.c \
-	gtkpagesetup.c gtkpaned.c gtkpapersize.c gtkpathbar.c \
-	gtkplug.c gtkprintcontext.c gtkprintoperation.c \
-	gtkprintoperationpreview.c gtkprintsettings.c gtkprintutils.c \
-	gtkprogressbar.c gtkradioaction.c gtkradiobutton.c \
-	gtkradiomenuitem.c gtkradiotoolbutton.c gtkrange.c gtkrbtree.c \
-	gtkrc.c gtkrecentaction.c gtkrecentchooserdefault.c \
+	gtkmenu.c gtkmenubar.c gtkmenuitem.c gtkmenuproxy.c \
+	gtkmenuproxymodule.c gtkmenushell.c gtkmenutoolbutton.c \
+	gtkmessagedialog.c gtkmisc.c gtkmnemonichash.c gtkmodules.c \
+	gtkmountoperation.c gtknotebook.c gtkobject.c \
+	gtkoffscreenwindow.c gtkorientable.c gtkpagesetup.c gtkpaned.c \
+	gtkpapersize.c gtkpathbar.c gtkplug.c gtkprintcontext.c \
+	gtkprintoperation.c gtkprintoperationpreview.c \
+	gtkprintsettings.c gtkprintutils.c gtkprogressbar.c \
+	gtkradioaction.c gtkradiobutton.c gtkradiomenuitem.c \
+	gtkradiotoolbutton.c gtkrange.c gtkrbtree.c gtkrc.c \
+	gtkrecentaction.c gtkrecentchooserdefault.c \
 	gtkrecentchooserdialog.c gtkrecentchoosermenu.c \
 	gtkrecentchooserwidget.c gtkrecentchooserutils.c \
 	gtkrecentchooser.c gtkrecentfilter.c gtkrecentmanager.c \
@@ -237,26 +238,27 @@
 	gtkinfobar.lo gtkinputdialog.lo gtkinvisible.lo gtkitem.lo \
 	gtkkeyhash.lo gtklabel.lo gtklayout.lo gtklinkbutton.lo \
 	gtkliststore.lo gtkmain.lo gtkmarshal.lo gtkmarshalers.lo \
-	gtkmenu.lo gtkmenubar.lo gtkmenuitem.lo gtkmenushell.lo \
-	gtkmenutoolbutton.lo gtkmessagedialog.lo gtkmisc.lo \
-	gtkmnemonichash.lo gtkmodules.lo gtkmountoperation.lo \
-	gtknotebook.lo gtkobject.lo gtkoffscreenwindow.lo \
-	gtkorientable.lo gtkpagesetup.lo gtkpaned.lo gtkpapersize.lo \
-	gtkpathbar.lo gtkplug.lo gtkprintcontext.lo \
-	gtkprintoperation.lo gtkprintoperationpreview.lo \
-	gtkprintsettings.lo gtkprintutils.lo gtkprogressbar.lo \
-	gtkradioaction.lo gtkradiobutton.lo gtkradiomenuitem.lo \
-	gtkradiotoolbutton.lo gtkrange.lo gtkrbtree.lo gtkrc.lo \
-	gtkrecentaction.lo gtkrecentchooserdefault.lo \
-	gtkrecentchooserdialog.lo gtkrecentchoosermenu.lo \
-	gtkrecentchooserwidget.lo gtkrecentchooserutils.lo \
-	gtkrecentchooser.lo gtkrecentfilter.lo gtkrecentmanager.lo \
-	gtkruler.lo gtkscale.lo gtkscalebutton.lo gtkscrollbar.lo \
-	gtkscrolledwindow.lo gtkselection.lo gtkseparator.lo \
-	gtkseparatormenuitem.lo gtkseparatortoolitem.lo gtksettings.lo \
-	gtksizegroup.lo gtkshow.lo gtksocket.lo gtkspinbutton.lo \
-	gtkspinner.lo gtkstatusbar.lo gtkstatusicon.lo gtkstock.lo \
-	gtkstyle.lo gtktable.lo gtktearoffmenuitem.lo gtktestutils.lo \
+	gtkmenu.lo gtkmenubar.lo gtkmenuitem.lo gtkmenuproxy.lo \
+	gtkmenuproxymodule.lo gtkmenushell.lo gtkmenutoolbutton.lo \
+	gtkmessagedialog.lo gtkmisc.lo gtkmnemonichash.lo \
+	gtkmodules.lo gtkmountoperation.lo gtknotebook.lo gtkobject.lo \
+	gtkoffscreenwindow.lo gtkorientable.lo gtkpagesetup.lo \
+	gtkpaned.lo gtkpapersize.lo gtkpathbar.lo gtkplug.lo \
+	gtkprintcontext.lo gtkprintoperation.lo \
+	gtkprintoperationpreview.lo gtkprintsettings.lo \
+	gtkprintutils.lo gtkprogressbar.lo gtkradioaction.lo \
+	gtkradiobutton.lo gtkradiomenuitem.lo gtkradiotoolbutton.lo \
+	gtkrange.lo gtkrbtree.lo gtkrc.lo gtkrecentaction.lo \
+	gtkrecentchooserdefault.lo gtkrecentchooserdialog.lo \
+	gtkrecentchoosermenu.lo gtkrecentchooserwidget.lo \
+	gtkrecentchooserutils.lo gtkrecentchooser.lo \
+	gtkrecentfilter.lo gtkrecentmanager.lo gtkruler.lo gtkscale.lo \
+	gtkscalebutton.lo gtkscrollbar.lo gtkscrolledwindow.lo \
+	gtkselection.lo gtkseparator.lo gtkseparatormenuitem.lo \
+	gtkseparatortoolitem.lo gtksettings.lo gtksizegroup.lo \
+	gtkshow.lo gtksocket.lo gtkspinbutton.lo gtkspinner.lo \
+	gtkstatusbar.lo gtkstatusicon.lo gtkstock.lo gtkstyle.lo \
+	gtktable.lo gtktearoffmenuitem.lo gtktestutils.lo \
 	gtktextbtree.lo gtktextbuffer.lo gtktextbufferrichtext.lo \
 	gtktextbufferserialize.lo gtktextchild.lo gtktextdisplay.lo \
 	gtktextiter.lo gtktextlayout.lo gtktextmark.lo \
@@ -342,16 +344,17 @@
 	gtkinfobar.c gtkinputdialog.c gtkinvisible.c gtkitem.c \
 	gtkkeyhash.c gtklabel.c gtklayout.c gtklinkbutton.c \
 	gtkliststore.c gtkmain.c gtkmarshal.c gtkmarshalers.c \
-	gtkmenu.c gtkmenubar.c gtkmenuitem.c gtkmenushell.c \
-	gtkmenutoolbutton.c gtkmessagedialog.c gtkmisc.c \
-	gtkmnemonichash.c gtkmodules.c gtkmountoperation.c \
-	gtknotebook.c gtkobject.c gtkoffscreenwindow.c gtkorientable.c \
-	gtkpagesetup.c gtkpaned.c gtkpapersize.c gtkpathbar.c \
-	gtkplug.c gtkprintcontext.c gtkprintoperation.c \
-	gtkprintoperationpreview.c gtkprintsettings.c gtkprintutils.c \
-	gtkprogressbar.c gtkradioaction.c gtkradiobutton.c \
-	gtkradiomenuitem.c gtkradiotoolbutton.c gtkrange.c gtkrbtree.c \
-	gtkrc.c gtkrecentaction.c gtkrecentchooserdefault.c \
+	gtkmenu.c gtkmenubar.c gtkmenuitem.c gtkmenuproxy.c \
+	gtkmenuproxymodule.c gtkmenushell.c gtkmenutoolbutton.c \
+	gtkmessagedialog.c gtkmisc.c gtkmnemonichash.c gtkmodules.c \
+	gtkmountoperation.c gtknotebook.c gtkobject.c \
+	gtkoffscreenwindow.c gtkorientable.c gtkpagesetup.c gtkpaned.c \
+	gtkpapersize.c gtkpathbar.c gtkplug.c gtkprintcontext.c \
+	gtkprintoperation.c gtkprintoperationpreview.c \
+	gtkprintsettings.c gtkprintutils.c gtkprogressbar.c \
+	gtkradioaction.c gtkradiobutton.c gtkradiomenuitem.c \
+	gtkradiotoolbutton.c gtkrange.c gtkrbtree.c gtkrc.c \
+	gtkrecentaction.c gtkrecentchooserdefault.c \
 	gtkrecentchooserdialog.c gtkrecentchoosermenu.c \
 	gtkrecentchooserwidget.c gtkrecentchooserutils.c \
 	gtkrecentchooser.c gtkrecentfilter.c gtkrecentmanager.c \
@@ -429,16 +432,17 @@
 	gtkinfobar.c gtkinputdialog.c gtkinvisible.c gtkitem.c \
 	gtkkeyhash.c gtklabel.c gtklayout.c gtklinkbutton.c \
 	gtkliststore.c gtkmain.c gtkmarshal.c gtkmarshalers.c \
-	gtkmenu.c gtkmenubar.c gtkmenuitem.c gtkmenushell.c \
-	gtkmenutoolbutton.c gtkmessagedialog.c gtkmisc.c \
-	gtkmnemonichash.c gtkmodules.c gtkmountoperation.c \
-	gtknotebook.c gtkobject.c gtkoffscreenwindow.c gtkorientable.c \
-	gtkpagesetup.c gtkpaned.c gtkpapersize.c gtkpathbar.c \
-	gtkplug.c gtkprintcontext.c gtkprintoperation.c \
-	gtkprintoperationpreview.c gtkprintsettings.c gtkprintutils.c \
-	gtkprogressbar.c gtkradioaction.c gtkradiobutton.c \
-	gtkradiomenuitem.c gtkradiotoolbutton.c gtkrange.c gtkrbtree.c \
-	gtkrc.c gtkrecentaction.c gtkrecentchooserdefault.c \
+	gtkmenu.c gtkmenubar.c gtkmenuitem.c gtkmenuproxy.c \
+	gtkmenuproxymodule.c gtkmenushell.c gtkmenutoolbutton.c \
+	gtkmessagedialog.c gtkmisc.c gtkmnemonichash.c gtkmodules.c \
+	gtkmountoperation.c gtknotebook.c gtkobject.c \
+	gtkoffscreenwindow.c gtkorientable.c gtkpagesetup.c gtkpaned.c \
+	gtkpapersize.c gtkpathbar.c gtkplug.c gtkprintcontext.c \
+	gtkprintoperation.c gtkprintoperationpreview.c \
+	gtkprintsettings.c gtkprintutils.c gtkprogressbar.c \
+	gtkradioaction.c gtkradiobutton.c gtkradiomenuitem.c \
+	gtkradiotoolbutton.c gtkrange.c gtkrbtree.c gtkrc.c \
+	gtkrecentaction.c gtkrecentchooserdefault.c \
 	gtkrecentchooserdialog.c gtkrecentchoosermenu.c \
 	gtkrecentchooserwidget.c gtkrecentchooserutils.c \
 	gtkrecentchooser.c gtkrecentfilter.c gtkrecentmanager.c \
@@ -516,16 +520,17 @@
 	gtkinfobar.c gtkinputdialog.c gtkinvisible.c gtkitem.c \
 	gtkkeyhash.c gtklabel.c gtklayout.c gtklinkbutton.c \
 	gtkliststore.c gtkmain.c gtkmarshal.c gtkmarshalers.c \
-	gtkmenu.c gtkmenubar.c gtkmenuitem.c gtkmenushell.c \
-	gtkmenutoolbutton.c gtkmessagedialog.c gtkmisc.c \
-	gtkmnemonichash.c gtkmodules.c gtkmountoperation.c \
-	gtknotebook.c gtkobject.c gtkoffscreenwindow.c gtkorientable.c \
-	gtkpagesetup.c gtkpaned.c gtkpapersize.c gtkpathbar.c \
-	gtkplug.c gtkprintcontext.c gtkprintoperation.c \
-	gtkprintoperationpreview.c gtkprintsettings.c gtkprintutils.c \
-	gtkprogressbar.c gtkradioaction.c gtkradiobutton.c \
-	gtkradiomenuitem.c gtkradiotoolbutton.c gtkrange.c gtkrbtree.c \
-	gtkrc.c gtkrecentaction.c gtkrecentchooserdefault.c \
+	gtkmenu.c gtkmenubar.c gtkmenuitem.c gtkmenuproxy.c \
+	gtkmenuproxymodule.c gtkmenushell.c gtkmenutoolbutton.c \
+	gtkmessagedialog.c gtkmisc.c gtkmnemonichash.c gtkmodules.c \
+	gtkmountoperation.c gtknotebook.c gtkobject.c \
+	gtkoffscreenwindow.c gtkorientable.c gtkpagesetup.c gtkpaned.c \
+	gtkpapersize.c gtkpathbar.c gtkplug.c gtkprintcontext.c \
+	gtkprintoperation.c gtkprintoperationpreview.c \
+	gtkprintsettings.c gtkprintutils.c gtkprogressbar.c \
+	gtkradioaction.c gtkradiobutton.c gtkradiomenuitem.c \
+	gtkradiotoolbutton.c gtkrange.c gtkrbtree.c gtkrc.c \
+	gtkrecentaction.c gtkrecentchooserdefault.c \
 	gtkrecentchooserdialog.c gtkrecentchoosermenu.c \
 	gtkrecentchooserwidget.c gtkrecentchooserutils.c \
 	gtkrecentchooser.c gtkrecentfilter.c gtkrecentmanager.c \
@@ -1062,11 +1067,11 @@
 	gtkimmodule.h gtkimmulticontext.h gtkinfobar.h gtkinvisible.h \
 	gtkitem.h gtklabel.h gtklayout.h gtklinkbutton.h \
 	gtkliststore.h gtkmain.h gtkmenu.h gtkmenubar.h gtkmenuitem.h \
-	gtkmenushell.h gtkmenutoolbutton.h gtkmessagedialog.h \
-	gtkmisc.h gtkmodules.h gtkmountoperation.h gtknotebook.h \
-	gtkobject.h gtkoffscreenwindow.h gtkorientable.h \
-	gtkpagesetup.h gtkpaned.h gtkpapersize.h gtkplug.h \
-	gtkprintcontext.h gtkprintoperation.h \
+	gtkmenuproxy.h gtkmenuproxymodule.h gtkmenushell.h \
+	gtkmenutoolbutton.h gtkmessagedialog.h gtkmisc.h gtkmodules.h \
+	gtkmountoperation.h gtknotebook.h gtkobject.h \
+	gtkoffscreenwindow.h gtkorientable.h gtkpagesetup.h gtkpaned.h \
+	gtkpapersize.h gtkplug.h gtkprintcontext.h gtkprintoperation.h \
 	gtkprintoperationpreview.h gtkprintsettings.h gtkprivate.h \
 	gtkprogressbar.h gtkradioaction.h gtkradiobutton.h \
 	gtkradiomenuitem.h gtkradiotoolbutton.h gtkrange.h gtkrc.h \
@@ -1167,16 +1172,17 @@
 	gtkinfobar.c gtkinputdialog.c gtkinvisible.c gtkitem.c \
 	gtkkeyhash.c gtklabel.c gtklayout.c gtklinkbutton.c \
 	gtkliststore.c gtkmain.c gtkmarshal.c gtkmarshalers.c \
-	gtkmenu.c gtkmenubar.c gtkmenuitem.c gtkmenushell.c \
-	gtkmenutoolbutton.c gtkmessagedialog.c gtkmisc.c \
-	gtkmnemonichash.c gtkmodules.c gtkmountoperation.c \
-	gtknotebook.c gtkobject.c gtkoffscreenwindow.c gtkorientable.c \
-	gtkpagesetup.c gtkpaned.c gtkpapersize.c gtkpathbar.c \
-	gtkplug.c gtkprintcontext.c gtkprintoperation.c \
-	gtkprintoperationpreview.c gtkprintsettings.c gtkprintutils.c \
-	gtkprogressbar.c gtkradioaction.c gtkradiobutton.c \
-	gtkradiomenuitem.c gtkradiotoolbutton.c gtkrange.c gtkrbtree.c \
-	gtkrc.c gtkrecentaction.c gtkrecentchooserdefault.c \
+	gtkmenu.c gtkmenubar.c gtkmenuitem.c gtkmenuproxy.c \
+	gtkmenuproxymodule.c gtkmenushell.c gtkmenutoolbutton.c \
+	gtkmessagedialog.c gtkmisc.c gtkmnemonichash.c gtkmodules.c \
+	gtkmountoperation.c gtknotebook.c gtkobject.c \
+	gtkoffscreenwindow.c gtkorientable.c gtkpagesetup.c gtkpaned.c \
+	gtkpapersize.c gtkpathbar.c gtkplug.c gtkprintcontext.c \
+	gtkprintoperation.c gtkprintoperationpreview.c \
+	gtkprintsettings.c gtkprintutils.c gtkprogressbar.c \
+	gtkradioaction.c gtkradiobutton.c gtkradiomenuitem.c \
+	gtkradiotoolbutton.c gtkrange.c gtkrbtree.c gtkrc.c \
+	gtkrecentaction.c gtkrecentchooserdefault.c \
 	gtkrecentchooserdialog.c gtkrecentchoosermenu.c \
 	gtkrecentchooserwidget.c gtkrecentchooserutils.c \
 	gtkrecentchooser.c gtkrecentfilter.c gtkrecentmanager.c \
@@ -1932,6 +1938,8 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gtkmenu.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gtkmenubar.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gtkmenuitem.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gtkmenuproxy.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gtkmenuproxymodule.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gtkmenushell.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gtkmenutoolbutton.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gtkmessagedialog.Plo@am__quote@

=== modified file 'gtk/gtk.h'
--- old/gtk/gtk.h	2010-06-10 14:55:27 +0000
+++ new/gtk/gtk.h	2010-06-10 14:59:33 +0000
@@ -65,6 +65,8 @@
 #include <gtk/gtkcellview.h>
 #include <gtk/gtkcheckbutton.h>
 #include <gtk/gtkcheckmenuitem.h>
+#include <gtk/gtkmenuproxy.h>
+#include <gtk/gtkmenuproxymodule.h>
 #include <gtk/gtkclipboard.h>
 #include <gtk/gtkcolorbutton.h>
 #include <gtk/gtkcolorsel.h>

=== modified file 'gtk/gtk.symbols'
--- old/gtk/gtk.symbols	2010-06-10 14:59:04 +0000
+++ new/gtk/gtk.symbols	2010-06-10 14:59:33 +0000
@@ -2568,6 +2568,21 @@
 #endif
 #endif
 
+#if IN_HEADER(__GTK_MENU_PROXY_H__)
+#if IN_FILE(__GTK_MENU_PROXY_C__)
+gtk_menu_proxy_get_type G_GNUC_CONST
+gtk_menu_proxy_get
+gtk_menu_proxy_insert
+#endif
+#endif
+
+#if IN_HEADER(__GTK_MENU_PROXY_MODULE_H__)
+#if IN_FILE(__GTK_MENU_PROXY_MODULE_C__)
+gtk_menu_proxy_module_get_type
+gtk_menu_proxy_module_get
+#endif
+#endif
+
 #if IN_HEADER(__GTK_MENU_SHELL_H__)
 #if IN_FILE(__GTK_MENU_SHELL_C__)
 gtk_menu_shell_activate_item

=== modified file 'gtk/gtkcontainer.c'
--- old/gtk/gtkcontainer.c	2010-06-10 14:59:04 +0000
+++ new/gtk/gtkcontainer.c	2010-06-10 14:59:44 +0000
@@ -1219,6 +1219,8 @@
     }
 
   g_signal_emit (container, container_signals[ADD], 0, widget);
+
+  g_signal_emit (container, container_signals[CHILD_ADDED], 0, widget);
 }
 
 /**

=== added file 'gtk/gtkmenuproxy.c'
--- old/gtk/gtkmenuproxy.c	1970-01-01 00:00:00 +0000
+++ new/gtk/gtkmenuproxy.c	2010-06-10 14:59:44 +0000
@@ -0,0 +1,137 @@
+/*
+ * Copyright (C) 2010 Canonical, Ltd.
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the
+ * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
+ * Boston, MA 02111-1307, USA.
+ *
+ * Authors: Cody Russell <bratsche@gnome.org>
+ */
+
+#include "config.h"
+#include "gtkintl.h"
+#include "gtkmarshalers.h"
+#include "gtkmenuproxy.h"
+#include "gtkmenuproxymodule.h"
+#include "gtkmodules.h"
+#include "gtkalias.h"
+
+enum {
+  INSERTED,
+  LAST_SIGNAL
+};
+
+static guint               menu_proxy_signals[LAST_SIGNAL] = { 0 };
+static GObjectClass       *parent_class = NULL;
+static GtkMenuProxy       *proxy_singleton = NULL;
+
+static void gtk_menu_proxy_real_insert (GtkMenuProxy *proxy,
+                                        GtkWidget    *parent,
+                                        GtkWidget    *child,
+                                        guint         position);
+
+
+
+/* --------------------------------------------------------- */
+
+G_DEFINE_TYPE (GtkMenuProxy, gtk_menu_proxy, G_TYPE_OBJECT)
+
+static GObject *
+gtk_menu_proxy_constructor (GType                  type,
+                            guint                  n_params,
+                            GObjectConstructParam *params)
+{
+  GObject            *object;
+
+  if (proxy_singleton != NULL)
+    {
+      object = g_object_ref (proxy_singleton);
+    }
+  else
+    {
+      object = G_OBJECT_CLASS (gtk_menu_proxy_parent_class)->constructor (type,
+                                                                          n_params,
+                                                                          params);
+
+      proxy_singleton = GTK_MENU_PROXY (object);
+      g_object_add_weak_pointer (object, (gpointer) &proxy_singleton);
+    }
+
+  return object;
+}
+
+static void
+gtk_menu_proxy_init (GtkMenuProxy *proxy)
+{
+}
+
+static void
+gtk_menu_proxy_class_init (GtkMenuProxyClass *class)
+{
+  GObjectClass *object_class = G_OBJECT_CLASS (class);
+
+  parent_class = g_type_class_peek_parent (class);
+
+  menu_proxy_signals[INSERTED] =
+    g_signal_new (I_("inserted"),
+                  G_TYPE_FROM_CLASS (class),
+                  G_SIGNAL_RUN_LAST,
+                  G_STRUCT_OFFSET (GtkMenuProxyClass, inserted),
+                  NULL, NULL,
+                  _gtk_marshal_VOID__OBJECT_UINT,
+                  G_TYPE_NONE, 2,
+                  GTK_TYPE_WIDGET, G_TYPE_UINT);
+
+  class->insert = gtk_menu_proxy_real_insert;
+
+  object_class->constructor = gtk_menu_proxy_constructor;
+}
+
+GtkMenuProxy *
+gtk_menu_proxy_get (void)
+{
+  if (!proxy_singleton)
+    {
+      gtk_menu_proxy_module_get ();
+    }
+
+  return proxy_singleton;
+}
+
+static void
+gtk_menu_proxy_real_insert (GtkMenuProxy *proxy,
+                            GtkWidget    *parent,
+                            GtkWidget    *child,
+                            guint         position)
+{
+}
+
+void
+gtk_menu_proxy_insert (GtkMenuProxy *proxy,
+                       GtkWidget    *parent,
+                       GtkWidget    *child,
+                       guint         position)
+{
+  g_return_if_fail (GTK_IS_MENU_PROXY (proxy));
+
+  GTK_MENU_PROXY_GET_CLASS (proxy)->insert (proxy,
+                                            parent,
+                                            child,
+                                            position);
+
+  //g_signal_emit_by_name (proxy, "inserted", child, position);
+}
+
+#define __GTK_MENU_PROXY_C__
+#include "gtkaliasdef.c"

=== added file 'gtk/gtkmenuproxy.h'
--- old/gtk/gtkmenuproxy.h	1970-01-01 00:00:00 +0000
+++ new/gtk/gtkmenuproxy.h	2010-06-10 14:59:44 +0000
@@ -0,0 +1,70 @@
+/*
+ * Copyright (C) 2010 Canonical, Ltd.
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the
+ * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
+ * Boston, MA 02111-1307, USA.
+ *
+ * Authors: Cody Russell <bratsche@gnome.org>
+ */
+
+#if defined(GTK_DISABLE_SINGLE_INCLUDES) && !defined (__GTK_H_INSIDE__) && !defined (GTK_COMPILATION)
+#error "Only <gtk/gtk.h> can be included directly."
+#endif
+
+#ifndef __GTK_MENU_PROXY_H__
+#define __GTK_MENU_PROXY_H__
+
+#include <gtk/gtkwidget.h>
+#include <gtk/gtktypeutils.h>
+
+G_BEGIN_DECLS
+
+#define GTK_TYPE_MENU_PROXY                  (gtk_menu_proxy_get_type ())
+#define GTK_MENU_PROXY(o)                    (G_TYPE_CHECK_INSTANCE_CAST ((o), GTK_TYPE_MENU_PROXY, GtkMenuProxy))
+#define GTK_MENU_PROXY_CLASS(k)              (G_TYPE_CHECK_CLASS_CAST ((k), GTK_TYPE_MENU_PROXY, GtkMenuProxyClass))
+#define GTK_IS_MENU_PROXY(o)                 (G_TYPE_CHECK_INSTANCE_TYPE ((o), GTK_TYPE_MENU_PROXY))
+#define GTK_IS_MENU_PROXY_CLASS(k)           (G_TYPE_CHECK_CLASS_TYPE ((k), GTK_TYPE_MENU_PROXY))
+#define GTK_MENU_PROXY_GET_CLASS(o)          (G_TYPE_INSTANCE_GET_CLASS ((o), GTK_TYPE_MENU_PROXY, GtkMenuProxyClass))
+
+
+typedef struct _GtkMenuProxy      GtkMenuProxy;
+typedef struct _GtkMenuProxyClass GtkMenuProxyClass;
+
+struct _GtkMenuProxy
+{
+  GObject parent_object;
+};
+
+struct _GtkMenuProxyClass
+{
+  GObjectClass parent_class;
+
+  /* vtable */
+  void (* insert)    (GtkMenuProxy *proxy, GtkWidget *parent, GtkWidget *child, guint position);
+
+  /* signals */
+  void (* inserted)  (GtkMenuProxy *proxy, GtkWidget *child);
+};
+
+GType              gtk_menu_proxy_get_type      (void) G_GNUC_CONST;
+GtkMenuProxy*      gtk_menu_proxy_get           (void);
+void               gtk_menu_proxy_insert        (GtkMenuProxy *proxy,
+                                                 GtkWidget    *parent,
+                                                 GtkWidget    *child,
+                                                 guint         position);
+
+G_END_DECLS
+
+#endif /* __GTK_MENU_PROXY_H__ */

=== added file 'gtk/gtkmenuproxymodule.c'
--- old/gtk/gtkmenuproxymodule.c	1970-01-01 00:00:00 +0000
+++ new/gtk/gtkmenuproxymodule.c	2010-06-10 14:59:44 +0000
@@ -0,0 +1,239 @@
+/*
+ * Copyright (C) 2010 Canonical, Ltd.
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the
+ * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
+ * Boston, MA 02111-1307, USA.
+ *
+ * Authors: Cody Russell <bratsche@gnome.org>
+ */
+
+#include "config.h"
+#include "gtkintl.h"
+#include "gtkmenuproxy.h"
+#include "gtkmenuproxymodule.h"
+#include "gtkmodules.h"
+#include "gtkalias.h"
+
+enum {
+  PROP_0,
+  PROP_MODULENAME
+};
+
+static GObject  *gtk_menu_proxy_module_constructor   (GType                  type,
+                                                      guint                  n_params,
+                                                      GObjectConstructParam *params);
+static void      gtk_menu_proxy_module_finalize      (GObject               *object);
+static gboolean  gtk_menu_proxy_module_real_load     (GTypeModule           *gmodule);
+static void      gtk_menu_proxy_module_real_unload   (GTypeModule           *gmodule);
+
+
+G_DEFINE_TYPE (GtkMenuProxyModule, gtk_menu_proxy_module, G_TYPE_TYPE_MODULE);
+
+static GtkMenuProxyModule *proxy_module_singleton = NULL;
+
+static void
+gtk_menu_proxy_module_class_init (GtkMenuProxyModuleClass *class)
+{
+  GObjectClass     *object_class      = G_OBJECT_CLASS (class);
+  GTypeModuleClass *type_module_class = G_TYPE_MODULE_CLASS (class);
+
+  //object_class->constructor  = gtk_menu_proxy_module_constructor;
+  object_class->finalize     = gtk_menu_proxy_module_finalize;
+
+  type_module_class->load    = gtk_menu_proxy_module_real_load;
+  type_module_class->unload  = gtk_menu_proxy_module_real_unload;
+}
+
+/*
+static GObject *
+gtk_menu_proxy_module_constructor (GType                  type,
+                                   guint                  n_params,
+                                   GObjectConstructParam *params)
+{
+  GObject            *object;
+
+  if (proxy_module_singleton != NULL)
+    {
+      object = g_object_ref (proxy_module_singleton);
+    }
+  else
+    {
+      object = G_OBJECT_CLASS (gtk_menu_proxy_module_parent_class)->constructor (type,
+                                                                                 n_params,
+                                                                                 params);
+
+      proxy_module_singleton = GTK_MENU_PROXY_MODULE (object);
+      g_object_add_weak_pointer (object, (gpointer) &proxy_module_singleton);
+    }
+
+  return object;
+}
+*/
+
+static void
+gtk_menu_proxy_module_init (GtkMenuProxyModule *module)
+{
+  module->name     = g_strdup (g_getenv ("GTK_MENUPROXY"));
+  module->library  = NULL;
+  module->load     = NULL;
+  module->unload   = NULL;
+}
+
+static void
+gtk_menu_proxy_module_finalize (GObject *object)
+{
+  GtkMenuProxyModule *module = GTK_MENU_PROXY_MODULE (object);
+
+  if (module->name != NULL)
+    {
+      g_free (module->name);
+    }
+
+  G_OBJECT_CLASS (gtk_menu_proxy_module_parent_class)->finalize (object);
+}
+
+static gboolean
+gtk_menu_proxy_module_real_load (GTypeModule *gmodule)
+{
+  GtkMenuProxyModule *module = GTK_MENU_PROXY_MODULE (gmodule);
+  gchar *path;
+
+  if (proxy_module_singleton != NULL)
+    return TRUE;
+
+  if (!module->name)
+    {
+      g_warning ("Module path not set");
+      return FALSE;
+    }
+
+  path = _gtk_find_module (module->name, "menuproxies");
+
+  module->library = g_module_open (path, 0);
+
+  if (!module->library)
+    {
+      g_printerr ("%s\n", g_module_error ());
+      return FALSE;
+    }
+
+  /* Make sure that the loaded library contains the required methods */
+  if (!g_module_symbol (module->library,
+                        "menu_proxy_module_load",
+                        (gpointer *) &module->load) ||
+      !g_module_symbol (module->library,
+                        "menu_proxy_module_unload",
+                        (gpointer *) &module->unload))
+    {
+      g_printerr ("%s\n", g_module_error ());
+      g_module_close (module->library);
+
+      return FALSE;
+    }
+
+  /* Initialize the loaded module */
+  module->load (module);
+
+  return TRUE;
+}
+
+static void
+gtk_menu_proxy_module_real_unload (GTypeModule *gmodule)
+{
+  GtkMenuProxyModule *module = GTK_MENU_PROXY_MODULE (gmodule);
+
+  module->unload (module);
+
+  g_module_close (module->library);
+  module->library = NULL;
+
+  module->load   = NULL;
+  module->unload = NULL;
+}
+
+static gboolean
+is_valid_module_name (const gchar *name)
+{
+#if !defined(G_OS_WIN32) && !defined(G_WITH_CYGWIN)
+  return g_str_has_prefix (name, "lib") && g_str_has_suffix (name, ".so");
+#else
+  return g_str_has_suffix (name, ".dll");
+#endif
+}
+
+static void
+setup_instance (GtkMenuProxyModule *module)
+{
+  GType *proxy_types;
+  guint  n_proxies;
+
+  proxy_types = g_type_children (GTK_TYPE_MENU_PROXY,
+                                 &n_proxies);
+
+  if (n_proxies > 1)
+    {
+      g_warning ("There are %d child types of GtkMenuProxy, should be 0 or 1.\n",
+                 n_proxies);
+    }
+  else if (n_proxies == 1)
+    {
+      g_object_new (proxy_types[0], NULL);
+    }
+}
+
+GtkMenuProxyModule *
+gtk_menu_proxy_module_get (void)
+{
+  if (!proxy_module_singleton)
+    {
+      GtkMenuProxyModule *module = NULL;
+      const gchar *module_name;
+
+      module_name = g_getenv ("GTK_MENUPROXY");
+
+      if (module_name != NULL)
+        {
+          if (is_valid_module_name (module_name))
+            {
+              gchar *path = _gtk_find_module (module_name, "menuproxies");
+
+              module = g_object_new (GTK_TYPE_MENU_PROXY_MODULE,
+                                     NULL);
+
+              if (!g_type_module_use (G_TYPE_MODULE (module)))
+                {
+                  g_warning ("Failed to load type module: %s\n", path);
+
+                  g_object_unref (module);
+                  g_free (path);
+
+                  return NULL;
+                }
+
+              setup_instance (module);
+
+              g_free (path);
+              g_type_module_unuse (G_TYPE_MODULE (module));
+            }
+
+          proxy_module_singleton = module;
+        }
+    }
+
+  return proxy_module_singleton;
+}
+
+#define __GTK_MENU_PROXY_MODULE_C__
+#include "gtkaliasdef.c"

=== added file 'gtk/gtkmenuproxymodule.h'
--- old/gtk/gtkmenuproxymodule.h	1970-01-01 00:00:00 +0000
+++ new/gtk/gtkmenuproxymodule.h	2010-06-10 14:59:44 +0000
@@ -0,0 +1,69 @@
+/*
+ * Copyright (C) 2010 Canonical, Ltd.
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the
+ * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
+ * Boston, MA 02111-1307, USA.
+ *
+ * Authors: Cody Russell <bratsche@gnome.org>
+ */
+
+#if defined(GTK_DISABLE_SINGLE_INCLUDES) && !defined (__GTK_H_INSIDE__) && !defined (GTK_COMPILATION)
+#error "Only <gtk/gtk.h> can be included directly."
+#endif
+
+#ifndef __GTK_MENU_PROXY_MODULE_H__
+#define __GTK_MENU_PROXY_MODULE_H__
+
+#include <glib-object.h>
+#include <gmodule.h>
+
+G_BEGIN_DECLS
+
+#define GTK_TYPE_MENU_PROXY_MODULE         (gtk_menu_proxy_module_get_type ())
+#define GTK_MENU_PROXY_MODULE(o)           (G_TYPE_CHECK_INSTANCE_CAST ((o), GTK_TYPE_MENU_PROXY_MODULE, GtkMenuProxyModule))
+#define GTK_MENU_PROXY_MODULE_CLASS(k)     (G_TYPE_CHECK_CLASS_CAST ((k), GTK_TYPE_MENU_PROXY_MODULE, GtkMenuProxyModuleClass))
+#define GTK_IS_MENU_MODULE_PROXY(o)        (G_TYPE_CHECK_INSTANCE_TYPE ((o), GTK_TYPE_MENU_PROXY_MODULE))
+#define GTK_IS_MENU_PROXY_MODULE_CLASS(k)  (G_TYPE_CHECK_CLASS_TYPE ((k), GTK_TYPE_MENU_PROXY_MODULE))
+#define GTK_MENU_PROXY_MODULE_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GTK_TYPE_MENU_PROXY_MODULE, GtkMenuProxyModuleClass))
+
+typedef struct _GtkMenuProxyModule        GtkMenuProxyModule;
+typedef struct _GtkMenuProxyModuleClass   GtkMenuProxyModuleClass;
+typedef struct _GtkMenuProxyModulePrivate GtkMenuProxyModulePrivate;
+
+struct _GtkMenuProxyModule
+{
+  GTypeModule parent_instance;
+
+  GtkMenuProxyModulePrivate *priv;
+
+  GModule *library;
+  gchar   *name;
+
+  void        (* load)     (GtkMenuProxyModule *module);
+  void        (* unload)   (GtkMenuProxyModule *module);
+};
+
+struct _GtkMenuProxyModuleClass
+{
+  GTypeModuleClass parent_class;
+};
+
+GType               gtk_menu_proxy_module_get_type (void) G_GNUC_CONST;
+
+GtkMenuProxyModule *gtk_menu_proxy_module_get      (void);
+
+G_END_DECLS
+
+#endif /* __GTK_MENU_PROXY_MODULE_H__ */

=== modified file 'gtk/gtkmenushell.c'
--- old/gtk/gtkmenushell.c	2010-06-10 14:59:04 +0000
+++ new/gtk/gtkmenushell.c	2010-06-10 15:01:00 +0000
@@ -37,6 +37,7 @@
 #include "gtkmenubar.h"
 #include "gtkmenuitem.h"
 #include "gtkmenushell.h"
+#include "gtkmenuproxy.h"
 #include "gtkmnemonichash.h"
 #include "gtktearoffmenuitem.h"
 #include "gtkwindow.h"
@@ -135,6 +136,8 @@
   GtkMnemonicHash *mnemonic_hash;
   GtkKeyHash *key_hash;
 
+  GtkMenuProxy *proxy;
+
   guint take_focus : 1;
   guint activated_submenu : 1;
   /* This flag is a crutch to keep mnemonics in the same menu
@@ -416,6 +419,8 @@
   priv->key_hash = NULL;
   priv->take_focus = TRUE;
   priv->activated_submenu = FALSE;
+  priv->proxy = gtk_menu_proxy_get ();
+  //priv->proxy = gtk_menu_proxy_factory_get_proxy ();
 }
 
 static void
@@ -491,11 +496,21 @@
 		       gint          position)
 {
   GtkMenuShellClass *class;
+  GtkMenuShellPrivate *priv;
 
   g_return_if_fail (GTK_IS_MENU_SHELL (menu_shell));
   g_return_if_fail (GTK_IS_MENU_ITEM (child));
 
   class = GTK_MENU_SHELL_GET_CLASS (menu_shell);
+  priv = GTK_MENU_SHELL_GET_PRIVATE (menu_shell);
+
+  // XXX
+  // insert to proxy
+  if (priv->proxy != NULL)
+    gtk_menu_proxy_insert (priv->proxy,
+                           menu_shell,
+                           child,
+                           position);
 
   if (class->insert)
     class->insert (menu_shell, child, position);

=== modified file 'gtk/tests/Makefile.am'
--- old/gtk/tests/Makefile.am	2010-06-10 14:55:27 +0000
+++ new/gtk/tests/Makefile.am	2010-06-10 14:59:44 +0000
@@ -47,6 +47,10 @@
 recentmanager_SOURCES 		 = recentmanager.c
 recentmanager_LDADD   		 = $(progs_ldadd)
 
+TEST_PROGS                      += menuproxy
+menuproxy_SOURCES                = menuproxy.c
+menuproxy_LDADD                  = $(progs_ldadd)
+
 TEST_PROGS			+= floating
 floating_SOURCES		 = floating.c
 floating_LDADD			 = $(progs_ldadd)

=== modified file 'gtk/tests/Makefile.in'
--- old/gtk/tests/Makefile.in	2010-06-10 14:59:04 +0000
+++ new/gtk/tests/Makefile.in	2010-06-10 14:59:44 +0000
@@ -56,9 +56,10 @@
 @OS_UNIX_TRUE@am__EXEEXT_1 = defaultvalue$(EXEEXT)
 am__EXEEXT_2 = testing$(EXEEXT) liststore$(EXEEXT) treestore$(EXEEXT) \
 	treeview$(EXEEXT) treeview-scrolling$(EXEEXT) \
-	recentmanager$(EXEEXT) floating$(EXEEXT) object$(EXEEXT) \
-	builder$(EXEEXT) $(am__EXEEXT_1) textbuffer$(EXEEXT) \
-	filtermodel$(EXEEXT) expander$(EXEEXT) action$(EXEEXT)
+	recentmanager$(EXEEXT) menuproxy$(EXEEXT) floating$(EXEEXT) \
+	object$(EXEEXT) builder$(EXEEXT) $(am__EXEEXT_1) \
+	textbuffer$(EXEEXT) filtermodel$(EXEEXT) expander$(EXEEXT) \
+	action$(EXEEXT)
 PROGRAMS = $(noinst_PROGRAMS)
 am_action_OBJECTS = action.$(OBJEXT)
 action_OBJECTS = $(am_action_OBJECTS)
@@ -91,6 +92,9 @@
 am_liststore_OBJECTS = liststore.$(OBJEXT)
 liststore_OBJECTS = $(am_liststore_OBJECTS)
 liststore_DEPENDENCIES = $(am__DEPENDENCIES_2)
+am_menuproxy_OBJECTS = menuproxy.$(OBJEXT)
+menuproxy_OBJECTS = $(am_menuproxy_OBJECTS)
+menuproxy_DEPENDENCIES = $(am__DEPENDENCIES_2)
 am_object_OBJECTS = object.$(OBJEXT) pixbuf-init.$(OBJEXT)
 object_OBJECTS = $(am_object_OBJECTS)
 object_DEPENDENCIES = $(am__DEPENDENCIES_2)
@@ -140,14 +144,14 @@
 am__v_GEN_0 = @echo "  GEN   " $@;
 SOURCES = $(action_SOURCES) $(builder_SOURCES) $(defaultvalue_SOURCES) \
 	$(expander_SOURCES) $(filtermodel_SOURCES) $(floating_SOURCES) \
-	$(liststore_SOURCES) $(object_SOURCES) \
+	$(liststore_SOURCES) $(menuproxy_SOURCES) $(object_SOURCES) \
 	$(recentmanager_SOURCES) $(testing_SOURCES) \
 	$(textbuffer_SOURCES) $(treestore_SOURCES) $(treeview_SOURCES) \
 	$(treeview_scrolling_SOURCES)
 DIST_SOURCES = $(action_SOURCES) $(builder_SOURCES) \
 	$(defaultvalue_SOURCES) $(expander_SOURCES) \
 	$(filtermodel_SOURCES) $(floating_SOURCES) \
-	$(liststore_SOURCES) $(object_SOURCES) \
+	$(liststore_SOURCES) $(menuproxy_SOURCES) $(object_SOURCES) \
 	$(recentmanager_SOURCES) $(testing_SOURCES) \
 	$(textbuffer_SOURCES) $(treestore_SOURCES) $(treeview_SOURCES) \
 	$(treeview_scrolling_SOURCES)
@@ -407,8 +411,8 @@
 # initialize variables for unconditional += appending
 EXTRA_DIST = 
 TEST_PROGS = testing liststore treestore treeview treeview-scrolling \
-	recentmanager floating object builder $(am__append_1) \
-	textbuffer filtermodel expander action
+	recentmanager menuproxy floating object builder \
+	$(am__append_1) textbuffer filtermodel expander action
 
 ### testing rules
 
@@ -465,6 +469,8 @@
 treeview_scrolling_LDADD = $(progs_ldadd)
 recentmanager_SOURCES = recentmanager.c
 recentmanager_LDADD = $(progs_ldadd)
+menuproxy_SOURCES = menuproxy.c
+menuproxy_LDADD = $(progs_ldadd)
 floating_SOURCES = floating.c
 floating_LDADD = $(progs_ldadd)
 object_SOURCES = object.c pixbuf-init.c
@@ -559,6 +565,9 @@
 liststore$(EXEEXT): $(liststore_OBJECTS) $(liststore_DEPENDENCIES) 
 	@rm -f liststore$(EXEEXT)
 	$(AM_V_CCLD)$(LINK) $(liststore_OBJECTS) $(liststore_LDADD) $(LIBS)
+menuproxy$(EXEEXT): $(menuproxy_OBJECTS) $(menuproxy_DEPENDENCIES) 
+	@rm -f menuproxy$(EXEEXT)
+	$(AM_V_CCLD)$(LINK) $(menuproxy_OBJECTS) $(menuproxy_LDADD) $(LIBS)
 object$(EXEEXT): $(object_OBJECTS) $(object_DEPENDENCIES) 
 	@rm -f object$(EXEEXT)
 	$(AM_V_CCLD)$(LINK) $(object_OBJECTS) $(object_LDADD) $(LIBS)
@@ -594,6 +603,7 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filtermodel.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/floating.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/liststore.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/menuproxy.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/object.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pixbuf-init.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/recentmanager.Po@am__quote@

=== added file 'gtk/tests/menuproxy.c'
--- old/gtk/tests/menuproxy.c	1970-01-01 00:00:00 +0000
+++ new/gtk/tests/menuproxy.c	2010-06-10 14:59:44 +0000
@@ -0,0 +1,278 @@
+/*
+ * Copyright (C) 2009 Canonical, Ltd.
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the
+ * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
+ * Boston, MA 02111-1307, USA.
+ *
+ * Authors: Cody Russell <bratsche@gnome.org>
+ */
+
+#undef GTK_DISABLE_DEPRECATED
+#include "../gtk/gtk.h"
+
+typedef struct _TestProxy      TestProxy;
+typedef struct _TestProxyClass TestProxyClass;
+
+//static GType           test_proxy_type_id      = 0;
+//static TestProxyClass *test_proxy_parent_class = NULL;
+
+#define TEST_TYPE_PROXY     (test_proxy_type_id)
+#define TEST_PROXY(o)       (G_TYPE_CHECK_INSTANCE_CAST ((o), TEST_TYPE_PROXY, TestProxy))
+#define TEST_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST((k), TEST_TYPE_PROXY, TestProxyClass))
+#define TEST_IS_PROXY(o)    (G_TYPE_CHECK_INSTANCE_TYPE ((o), TEST_TYPE_PROXY))
+
+struct _TestProxy
+{
+  GtkMenuProxy parent_object;
+};
+
+struct _TestProxyClass
+{
+  GtkMenuProxyClass parent_class;
+};
+
+static void test_proxy_insert         (GtkMenuProxy *proxy,
+                                       GtkWidget    *child,
+                                       guint         position);
+
+G_DEFINE_DYNAMIC_TYPE(TestProxy, test_proxy, GTK_TYPE_MENU_PROXY)
+
+static void
+test_proxy_init (TestProxy *proxy)
+{
+}
+
+static void
+test_proxy_class_init (TestProxyClass *class)
+{
+  GtkMenuProxyClass *proxy_class = GTK_MENU_PROXY_CLASS (class);
+
+  test_proxy_parent_class = g_type_class_peek_parent (class);
+
+  proxy_class->insert = test_proxy_insert;
+}
+
+static void
+test_proxy_class_finalize (TestProxyClass *class)
+{
+}
+
+static void
+test_proxy_insert (GtkMenuProxy *proxy,
+                   GtkWidget    *child,
+                   guint         position)
+{
+}
+
+/* ---------------------------------------------------- */
+
+#define TEST_TYPE_MODULE         (test_module_get_type ())
+#define TEST_MODULE(o)           (G_TYPE_CHECK_INSTANCE_CAST ((o), TEST_TYPE_MODULE, TestModule))
+#define TEST_MODULE_CLASS(k)     (G_TYPE_CHECK_CLASS_CAST((k), TEST_TYPE_MODULE, TestModuleClass))
+#define TEST_IS_MODULE(o)        (G_TYPE_CHECK_INSTANCE_TYPE ((o), TEST_TYPE_MODULE))
+#define TEST_IS_MODULE_CLASS(k)  (G_TYPE_CHECK_CLASS_TYPE ((k), TEST_TYPE_MODULE))
+#define TEST_MODULE_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TEST_TYPE_MODULE, TestModuleClass))
+
+
+typedef struct _TestModule      TestModule;
+typedef struct _TestModuleClass TestModuleClass;
+
+struct _TestModule
+{
+  GTypeModule  parent_instance;
+};
+
+struct _TestModuleClass
+{
+  GTypeModuleClass  parent_class;
+};
+
+static gboolean
+test_module_load (GTypeModule *module)
+{
+  g_print ("registering type...\n");
+  g_print ("     type_id = %d\n", test_proxy_type_id);
+
+  test_proxy_register_type (G_TYPE_MODULE (module));
+
+  //test_proxy_get_type (G_TYPE_MODULE (module));
+
+  g_print ("     type_id = %d\n", test_proxy_type_id);
+
+  return TRUE;
+}
+
+static void
+test_module_unload (GTypeModule *module)
+{
+}
+
+static void
+test_module_class_init (TestModuleClass *class)
+{
+  GTypeModuleClass *type_module_class = G_TYPE_MODULE_CLASS (class);
+
+  type_module_class->load = test_module_load;
+  type_module_class->unload = test_module_unload;
+}
+
+static void
+test_module_init (TestModule *module)
+{
+}
+
+G_DEFINE_TYPE (TestModule, test_module, G_TYPE_TYPE_MODULE);
+
+TestModule *
+test_module_new (void)
+{
+  TestModule *module = g_object_new (TEST_TYPE_MODULE,
+                                     NULL);
+
+  g_print ("test_module_new(): %p\n", module);
+
+  return module;
+}
+
+
+/* ---------------------------------------------------- */
+
+static void
+non_null_proxy_test (void)
+{
+  GtkMenuProxyModule *module;
+
+  /* prevent the module loader from finding a proxy module */
+  g_unsetenv ("GTK_MENUPROXY");
+
+  module = gtk_menu_proxy_module_get ();
+  test_proxy_register_type (G_TYPE_MODULE (module));
+  //test_proxy_get_type (G_TYPE_MODULE (module));
+
+  GtkWidget *widget = g_object_new (GTK_TYPE_MENU_BAR, NULL);
+  g_object_ref_sink (widget);
+
+  g_assert (GTK_IS_MENU_BAR (widget));
+  //g_assert (GTK_MENU_SHELL (widget)->proxy != NULL);
+
+  g_object_unref (widget);
+}
+
+static void
+null_proxy_test (void)
+{
+  GtkWidget *widget = g_object_new (GTK_TYPE_MENU_BAR, NULL);
+  g_object_ref_sink (widget);
+
+  g_assert (GTK_IS_MENU_BAR (widget));
+
+  //g_assert (GTK_MENU_SHELL (widget)->proxy == NULL);
+
+  g_object_unref (widget);
+}
+
+static gboolean inserted_called = FALSE;
+
+static void
+inserted_cb (GtkMenuProxy *proxy,
+             GtkWidget    *child,
+             guint         position,
+             gpointer      data)
+{
+  g_return_if_fail (GTK_IS_MENU_PROXY (proxy));
+  g_return_if_fail (GTK_IS_WIDGET (child));
+  inserted_called = TRUE;
+}
+
+static void
+menubar_signals_proxy_test (void)
+{
+  GtkWidget *widget   = NULL;
+  GtkWidget *menuitem = NULL;
+  GtkMenuProxy *proxy;
+
+  //gtk_menu_proxy_register_type (test_proxy_get_type ());
+
+  widget = g_object_new (GTK_TYPE_MENU_BAR, NULL);
+  g_object_ref_sink (widget);
+
+  g_assert (GTK_IS_MENU_BAR (widget));
+  //g_assert (GTK_MENU_SHELL (widget)->proxy != NULL);
+
+  /*
+  proxy = GTK_MENU_SHELL (widget)->proxy;
+
+  g_signal_connect (proxy,
+                    "inserted", G_CALLBACK (inserted_cb),
+                    NULL);
+  */
+
+  // insert menuitem
+  menuitem = gtk_menu_item_new_with_label ("Test Item");
+  gtk_menu_shell_append (GTK_MENU_SHELL (widget),
+                         menuitem);
+
+  g_assert (inserted_called == TRUE);
+
+  g_object_unref (widget);
+}
+
+static void
+proxy_type_exists_test (void)
+{
+#if 0
+  GtkMenuProxyModule *module;
+
+  g_unsetenv ("GTK_MENUPROXY");
+
+  module = gtk_menu_proxy_module_get ();
+  test_proxy_get_type (G_TYPE_MODULE (module));
+#endif
+
+  g_assert (gtk_menu_proxy_get_type () != 0);
+}
+
+static void
+can_instantiate_test (void)
+{
+  TestModule *module = test_module_new ();
+
+  g_type_module_use (G_TYPE_MODULE (module));
+
+  GtkMenuProxy *proxy = gtk_menu_proxy_get ();
+
+  g_assert (proxy != NULL);
+
+  g_object_ref_sink (proxy);
+
+  g_assert (TEST_IS_PROXY (proxy));
+  g_assert (GTK_IS_MENU_PROXY (proxy));
+
+  g_object_unref (proxy);
+}
+
+int
+main (int argc, char *argv[])
+{
+  gtk_test_init (&argc, &argv);
+
+  g_test_add_func ("/proxy/null-proxy", null_proxy_test);
+  g_test_add_func ("/proxy/type-exists", proxy_type_exists_test);
+  g_test_add_func ("/proxy/can-instantiate", can_instantiate_test);
+  g_test_add_func ("/proxy/non-null-proxy", non_null_proxy_test);
+  g_test_add_func ("/proxy/menubar-signals-proxy", menubar_signals_proxy_test);
+
+  return g_test_run();
+}

