## Description: add some description
## Origin/Author: add some origin or author
## Bug: bug URL
Index: gtk+2.0-2.20.1/gdk/x11/gdkscreen-x11.c
===================================================================
--- gtk+2.0-2.20.1.orig/gdk/x11/gdkscreen-x11.c	2010-08-02 18:21:36.578509339 -0500
+++ gtk+2.0-2.20.1/gdk/x11/gdkscreen-x11.c	2010-08-02 18:22:09.861017357 -0500
@@ -241,9 +241,34 @@
 GdkColormap *
 gdk_screen_get_default_colormap (GdkScreen *screen)
 {
+  GdkScreenX11 *screen_x11;
+  GdkColormap *colormap;
+
   g_return_val_if_fail (GDK_IS_SCREEN (screen), NULL);
 
-  return GDK_SCREEN_X11 (screen)->default_colormap;
+  screen_x11 = GDK_SCREEN_X11 (screen);
+
+  if (!screen_x11->default_colormap)
+    {
+      const gchar *name = g_get_prgname ();
+
+      if (!screen_x11->rgba_visual ||
+          g_strcmp0 (name, "emacs") == 0 ||
+          g_strcmp0 (name, "emacs23") == 0 ||
+          g_strcmp0 (name, "nautilus") == 0)
+        {
+          colormap = g_object_ref (gdk_screen_get_system_colormap (screen));
+        }
+      else
+        {
+          colormap = gdk_colormap_new (screen_x11->rgba_visual,
+                                       FALSE);
+        }
+
+      screen_x11->default_colormap = colormap;
+    }
+
+  return screen_x11->default_colormap;
 }
 
 /**
Index: gtk+2.0-2.20.1/gdk/x11/gdkwindow-x11.c
===================================================================
--- gtk+2.0-2.20.1.orig/gdk/x11/gdkwindow-x11.c	2010-08-02 18:21:36.598509484 -0500
+++ gtk+2.0-2.20.1/gdk/x11/gdkwindow-x11.c	2010-08-02 18:21:49.138509209 -0500
@@ -426,9 +426,6 @@
 
   g_assert (screen_x11->root_window == NULL);
 
-  gdk_screen_set_default_colormap (screen,
-				   gdk_screen_get_system_colormap (screen));
-
   screen_x11->root_window = g_object_new (GDK_TYPE_WINDOW, NULL);
 
   private = (GdkWindowObject *) screen_x11->root_window;
@@ -665,7 +662,8 @@
   unsigned int class;
   const char *title;
   int i;
-  
+  gint error;
+
   private = (GdkWindowObject *) window;
   
   screen_x11 = GDK_SCREEN_X11 (screen);
@@ -756,7 +754,7 @@
       
       xattributes_mask |= CWBitGravity;
 
-      xattributes.colormap = GDK_COLORMAP_XCOLORMAP (draw_impl->colormap);
+      //xattributes.colormap = GDK_COLORMAP_XCOLORMAP (draw_impl->colormap);
       xattributes_mask |= CWColormap;
 
       if (private->window_type == GDK_WINDOW_TEMP)
@@ -786,13 +784,38 @@
       if (private->height > 65535)
 	private->height = 65535;
     }
-  
+
+  xattributes.colormap = GDK_COLORMAP_XCOLORMAP (draw_impl->colormap);
+
+  gdk_error_trap_push ();
   xid = draw_impl->xid = XCreateWindow (xdisplay, xparent,
 					private->x + private->parent->abs_x,
 					private->y + private->parent->abs_y,
 					private->width, private->height,
 					0, private->depth, class, xvisual,
 					xattributes_mask, &xattributes);
+  gdk_flush ();
+  error = gdk_error_trap_pop ();
+  if (error == BadMatch)
+    {
+      g_warning ("BadMatch detected when creating window, attempting to revert to system visual and colormap.  To avoid this, try setting the widget's colormap to the default colormap for this screen.");
+
+      g_object_unref (draw_impl->colormap);
+      draw_impl->colormap = gdk_screen_get_system_colormap (screen);
+      g_object_ref (draw_impl->colormap);
+
+      visual = gdk_screen_get_system_visual (screen);
+      xvisual = ((GdkVisualPrivate*) visual)->xvisual;
+
+      xattributes.colormap = GDK_COLORMAP_XCOLORMAP (draw_impl->colormap);
+
+      xid = draw_impl->xid = XCreateWindow (xdisplay, xparent,
+                                            private->x + private->parent->abs_x,
+                                            private->y + private->parent->abs_y,
+                                            private->width, private->height,
+                                            0, private->depth, class, xvisual,
+                                            xattributes_mask, &xattributes);
+    }
 
   g_object_ref (window);
   _gdk_xid_table_insert (screen_x11->display, &draw_impl->xid, window);
@@ -3487,6 +3510,7 @@
 	  _gdk_x11_window_tmp_unset_parent_bg (window);
 	  _gdk_x11_window_tmp_unset_bg (window, TRUE);
 	}
+
       XShapeCombineRectangles (GDK_WINDOW_XDISPLAY (window),
                                GDK_WINDOW_XID (window),
                                shape,
